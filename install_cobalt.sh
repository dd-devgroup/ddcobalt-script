#!/bin/bash

set -e

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
RESET='\033[0m'

INFO="‚ÑπÔ∏è "
OK="‚úÖ"
WARN="‚ö†Ô∏è "
ERR="‚ùå"
ASK="üëâ"

# –ü—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏
COBALT_DIR="$HOME/cobalt"
COMPOSE_FILE="$COBALT_DIR/docker-compose.yml"
PORT="9000"
SCRIPT_URL="https://raw.githubusercontent.com/dd-devgroup/ddcobalt-script/main/install_cobalt.sh"
SCRIPT_PATH="$0"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if [ "$(id -u)" -ne 0 ]; then
  echo -e "${ERR} ${RED}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root (—á–µ—Ä–µ–∑ sudo)${RESET}"
  exit 1
fi

# === –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ===
install_cobalt() {
  echo -e "${INFO} ${CYAN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${RESET}"
  apt update -y && apt install -y curl nscd

  echo -e "${INFO} ${CYAN}–ó–∞–ø—É—Å–∫ nscd...${RESET}"
  systemctl enable nscd && systemctl start nscd

  echo -e "${ASK} ${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–π API URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://my.cobalt.instance/):${RESET}"
  read -rp ">>> " API_URL

  echo -e "${ASK} ${YELLOW}–ù—É–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cookies.json? [y/N]:${RESET}"
  read -rp ">>> " USE_COOKIES
  USE_COOKIES=${USE_COOKIES,,}

  echo -e "${INFO} ${CYAN}–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $COBALT_DIR...${RESET}"
  mkdir -p "$COBALT_DIR"
  cd "$COBALT_DIR"

  if [[ "$USE_COOKIES" == "y" ]]; then
    echo -e "${INFO} ${CYAN}–°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ cookies.json...${RESET}"
    touch cookies.json
  fi

  echo -e "${INFO} ${CYAN}–°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml...${RESET}"

  cat > "$COMPOSE_FILE" <<EOF
version: "3.8"

services:
  cobalt:
    image: ghcr.io/imputnet/cobalt:11
    init: true
    read_only: true
    restart: unless-stopped
    container_name: cobalt
    ports:
      - "$PORT:9000"
    environment:
      API_URL: "$API_URL"
EOF

  if [[ "$USE_COOKIES" == "y" ]]; then
    cat >> "$COMPOSE_FILE" <<EOF
      COOKIE_PATH: "/cookies.json"
EOF
  fi

  cat >> "$COMPOSE_FILE" <<EOF
    labels:
      - com.centurylinklabs.watchtower.scope=cobalt
EOF

  if [[ "$USE_COOKIES" == "y" ]]; then
    cat >> "$COMPOSE_FILE" <<EOF
    volumes:
      - ./cookies.json:/cookies.json
EOF
  fi

  cat >> "$COMPOSE_FILE" <<EOF

  watchtower:
    image: ghcr.io/containrrr/watchtower
    restart: unless-stopped
    command: --cleanup --scope cobalt --interval 900 --include-restarting
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
EOF

  echo -e "${INFO} ${CYAN}–ó–∞–ø—É—Å–∫ Cobalt —á–µ—Ä–µ–∑ Docker Compose...${RESET}"
  docker compose -f "$COMPOSE_FILE" up -d

  echo -e "${OK} ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! Cobalt —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $PORT${RESET}"
  [[ "$USE_COOKIES" == "y" ]] && echo -e "${WARN} ${YELLOW}–§–∞–π–ª cookies.json —Å–æ–∑–¥–∞–Ω. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.${RESET}"
}

# === –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç–∞ ===
update_script() {
  echo -e "${INFO} ${CYAN}–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç–∞...${RESET}"
  TMP_FILE=$(mktemp)
  curl -fsSL "$SCRIPT_URL" -o "$TMP_FILE"

  if cmp -s "$TMP_FILE" "$SCRIPT_PATH"; then
    echo -e "${OK} ${GREEN}–£ –≤–∞—Å —É–∂–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞.${RESET}"
    rm "$TMP_FILE"
  else
    echo -e "${ASK} ${YELLOW}–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è. –û–±–Ω–æ–≤–∏—Ç—å? [y/N]:${RESET}"
    read -rp ">>> " CONFIRM
    CONFIRM=${CONFIRM,,}
    if [[ "$CONFIRM" == "y" ]]; then
      cp "$TMP_FILE" "$SCRIPT_PATH"
      chmod +x "$SCRIPT_PATH"
      echo -e "${OK} ${GREEN}–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª—ë–Ω! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ —Å–Ω–æ–≤–∞.${RESET}"
    else
      echo -e "${INFO} ${CYAN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.${RESET}"
    fi
    rm "$TMP_FILE"
  fi
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
while true; do
  echo -e ""
  echo -e "${CYAN}===== DDCobalt Setup Menu =====${RESET}"
  echo -e "1. üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Cobalt"
  echo -e "2. üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞"
  echo -e "3. üö™ –í—ã–π—Ç–∏"
  echo -e ""
  read -rp "${ASK} –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [1-3]: " choice

  case $choice in
    1) install_cobalt ;;
    2) update_script ;;
    3) echo -e "${OK} ${GREEN}–í—ã—Ö–æ–¥...${RESET}"; exit 0 ;;
    *) echo -e "${ERR} ${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${RESET}" ;;
  esac
done
